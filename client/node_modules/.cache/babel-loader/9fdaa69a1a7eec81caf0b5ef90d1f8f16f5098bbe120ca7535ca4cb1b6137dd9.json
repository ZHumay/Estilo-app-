{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\EstiloApp\\\\Estilo-app-\\\\client\\\\src\\\\Pages\\\\MyOrders\\\\Myorders.jsx\";\nimport React from \"react\";\nimport \"./myorders.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Myorders() {\n  // Retrieve orders from localStorage\n  const myorders = JSON.parse(localStorage.getItem(\"myorders\"));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog_post_profile_wrapper\",\n        children: (myorders === null || myorders === void 0 ? void 0 : myorders.length) > 0 ?\n        // Render myorders if there are items in the myorders array\n        myorders.map((order, index) => {\n          var _order$items;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blog_profile_postt\",\n            children: ((_order$items = order.items) === null || _order$items === void 0 ? void 0 : _order$items.length) > 0 ?\n            /*#__PURE__*/\n            // Display order details if there are items in the items array\n            _jsxDEV(_Fragment, {\n              children: [\"for\", /*#__PURE__*/_jsxDEV(\"img\", {\n                src: order.items.postImage,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mid__title\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: order.items.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 23,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Price: \", order.items.price, \"$\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Address: \", order.address]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) :\n            /*#__PURE__*/\n            // Render a message when there are no items in the items array\n            _jsxDEV(\"p\", {\n              children: \"No items found for this order.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this);\n        }) :\n        /*#__PURE__*/\n        // Render a message when there are no orders\n        _jsxDEV(\"p\", {\n          children: \"No orders found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Myorders;\nexport default Myorders;\nvar _c;\n$RefreshReg$(_c, \"Myorders\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Myorders","myorders","JSON","parse","localStorage","getItem","children","className","length","map","order","index","_order$items","items","src","postImage","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","price","address","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/EstiloApp/Estilo-app-/client/src/Pages/MyOrders/Myorders.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./myorders.css\";\r\n\r\nfunction Myorders() {\r\n  // Retrieve orders from localStorage\r\n  const myorders = JSON.parse(localStorage.getItem(\"myorders\"));\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bottom\">\r\n\r\n        <div className=\"blog_post_profile_wrapper\">\r\n          {myorders?.length > 0 ? (\r\n            // Render myorders if there are items in the myorders array\r\n            myorders.map((order, index) => (\r\n              <div className=\"blog_profile_postt\" key={index}>\r\n                {order.items?.length > 0 ? (\r\n                  // Display order details if there are items in the items array\r\n                  <>\r\n                  for\r\n                    <img src={order.items.postImage} alt=\"\" />\r\n                    <div className=\"mid__title\">\r\n                      <h3>{order.items.title}</h3>\r\n                      <p>Price: {order.items.price}$</p>\r\n                      <p>Address: {order.address}</p>\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  // Render a message when there are no items in the items array\r\n                  <p>No items found for this order.</p>\r\n                )}\r\n              </div>\r\n            ))\r\n          ) : (\r\n            // Render a message when there are no orders\r\n            <p>No orders found.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Myorders;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExB,SAASC,QAAQA,CAAA,EAAG;EAClB;EACA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;EAE7D,oBACER,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA;MAAKU,SAAS,EAAC,QAAQ;MAAAD,QAAA,eAErBT,OAAA;QAAKU,SAAS,EAAC,2BAA2B;QAAAD,QAAA,EACvC,CAAAL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEO,MAAM,IAAG,CAAC;QACnB;QACAP,QAAQ,CAACQ,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK;UAAA,IAAAC,YAAA;UAAA,oBACxBf,OAAA;YAAKU,SAAS,EAAC,oBAAoB;YAAAD,QAAA,EAChC,EAAAM,YAAA,GAAAF,KAAK,CAACG,KAAK,cAAAD,YAAA,uBAAXA,YAAA,CAAaJ,MAAM,IAAG,CAAC;YAAA;YACtB;YACAX,OAAA,CAAAE,SAAA;cAAAO,QAAA,GAAE,KAEA,eAAAT,OAAA;gBAAKiB,GAAG,EAAEJ,KAAK,CAACG,KAAK,CAACE,SAAU;gBAACC,GAAG,EAAC;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC1CvB,OAAA;gBAAKU,SAAS,EAAC,YAAY;gBAAAD,QAAA,gBACzBT,OAAA;kBAAAS,QAAA,EAAKI,KAAK,CAACG,KAAK,CAACQ;gBAAK;kBAAAJ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC5BvB,OAAA;kBAAAS,QAAA,GAAG,SAAO,EAACI,KAAK,CAACG,KAAK,CAACS,KAAK,EAAC,GAAC;gBAAA;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC,eAClCvB,OAAA;kBAAAS,QAAA,GAAG,WAAS,EAACI,KAAK,CAACa,OAAO;gBAAA;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC;YAAA,eACN,CAAC;YAAA;YAEH;YACAvB,OAAA;cAAAS,QAAA,EAAG;YAA8B;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UACrC,GAfsCT,KAAK;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAgBzC,CAAC;QAAA,CACP,CAAC;QAAA;QAEF;QACAvB,OAAA;UAAAS,QAAA,EAAG;QAAgB;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MACvB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AAACI,EAAA,GAtCQxB,QAAQ;AAwCjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}