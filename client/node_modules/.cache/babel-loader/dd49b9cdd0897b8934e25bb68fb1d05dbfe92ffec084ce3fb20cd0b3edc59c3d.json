{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cardSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    count: 0\n  },\n  reducers: {\n    addToCart: (state, action) => {\n      state.items.push(action.payload);\n      state.count = state.items.length;\n      localStorage.setItem('cartItems', JSON.stringify(state.items));\n    },\n    removeFromCart: (state, action) => {\n      state.items = state.items.filter(item => item.id !== action.payload);\n      state.count = state.items.length;\n      localStorage.setItem('cartItems', JSON.stringify(state.items));\n    },\n    initializeCartFromStorage: state => {\n      const storedItems = localStorage.getItem('cartItems');\n      if (storedItems) {\n        state.items = JSON.parse(storedItems);\n        state.count = state.items.length;\n      }\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  initializeCartFromStorage,\n  items,\n  count\n} = cardSlice.actions;\nexport default cardSlice.reducer;","map":{"version":3,"names":["createSlice","cardSlice","name","initialState","items","count","reducers","addToCart","state","action","push","payload","length","localStorage","setItem","JSON","stringify","removeFromCart","filter","item","id","initializeCartFromStorage","storedItems","getItem","parse","actions","reducer"],"sources":["C:/Users/user/Desktop/final/Estilo-app-/client/src/store/cardSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst cardSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: {\r\n    items: [],\r\n    count: 0,\r\n  },\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      state.items.push(action.payload);\r\n      state.count = state.items.length;\r\n      localStorage.setItem('cartItems', JSON.stringify(state.items));\r\n    },\r\n    removeFromCart: (state, action) => {\r\n      state.items = state.items.filter(item => item.id !== action.payload);\r\n      state.count = state.items.length;\r\n      localStorage.setItem('cartItems', JSON.stringify(state.items));\r\n    },\r\n    initializeCartFromStorage: (state) => {\r\n      const storedItems = localStorage.getItem('cartItems');\r\n      if (storedItems) {\r\n        state.items = JSON.parse(storedItems);\r\n        state.count = state.items.length;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToCart, removeFromCart, initializeCartFromStorage,items,count } = cardSlice.actions;\r\nexport default cardSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACJ,KAAK,CAACM,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MAChCH,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACJ,KAAK,CAACQ,MAAM;MAChCC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACR,KAAK,CAACJ,KAAK,CAAC,CAAC;IAChE,CAAC;IACDa,cAAc,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACc,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKX,MAAM,CAACE,OAAO,CAAC;MACpEH,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACJ,KAAK,CAACQ,MAAM;MAChCC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACR,KAAK,CAACJ,KAAK,CAAC,CAAC;IAChE,CAAC;IACDiB,yBAAyB,EAAGb,KAAK,IAAK;MACpC,MAAMc,WAAW,GAAGT,YAAY,CAACU,OAAO,CAAC,WAAW,CAAC;MACrD,IAAID,WAAW,EAAE;QACfd,KAAK,CAACJ,KAAK,GAAGW,IAAI,CAACS,KAAK,CAACF,WAAW,CAAC;QACrCd,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACJ,KAAK,CAACQ,MAAM;MAClC;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEL,SAAS;EAAEU,cAAc;EAAEI,yBAAyB;EAACjB,KAAK;EAACC;AAAM,CAAC,GAAGJ,SAAS,CAACwB,OAAO;AACrG,eAAexB,SAAS,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}