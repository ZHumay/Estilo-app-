{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\EstiloApp\\\\Estilo-app-\\\\client\\\\src\\\\Components\\\\Comments\\\\Comments.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Comments.css\";\nimport Comment from \"../Comment/Comment\";\nimport axios from \"axios\";\nimport { useActiveUserContext } from \"../../hooks/useActiveUserContext\";\nimport { useCommentsContext } from \"../../hooks/useCommentsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  post\n}) => {\n  _s();\n  const {\n    activeUser\n  } = useActiveUserContext();\n  const [comment, setComment] = useState();\n  const {\n    comments,\n    dispatchComments\n  } = useCommentsContext();\n  const handleComment = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(`/api/comments/comment/${activeUser === null || activeUser === void 0 ? void 0 : activeUser._id}`, {\n        postId: post._id,\n        comment: comment\n      });\n      if (res.status === 200) {\n        dispatchComments({\n          type: \"ADD_COMMENT\",\n          payload: res.data.comment\n        });\n        setComment(\"\");\n      } else {\n        console.log(\"Comment not posted\");\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  useEffect(() => {\n    localStorage.getItem(\"activeUser\");\n    const fetchCurrentPost = async () => {\n      try {\n        const res = await axios.get(`/api/posts/post/${id}`);\n        if (res.status === 200) {\n          var _users;\n          setCurrentPost(res.data.post);\n          setLikeCount(res.data.post.likes.length);\n          (_users = users) === null || _users === void 0 ? void 0 : _users.map(user => {\n            if ((user === null || user === void 0 ? void 0 : user._id) === res.data.post.authorId) {\n              setPostAuthor(user);\n            }\n          });\n        } else {\n          console.log(\"Post not found\");\n        }\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    const fetchActiveUser = async () => {\n      try {\n        if (Cookies.get(\"jwt\")) {\n          const res = await axios.post(\"/api/auth/active-user\", {\n            token: Cookies.get(\"jwt\")\n          });\n          if (res.status === 200) {\n            dispatchActiceUser({\n              type: \"GET_ACTIVE_USER\",\n              payload: res.data.user\n            });\n          }\n        }\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchCurrentPost();\n    fetchActiveUser();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments_section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"add_comment_txt\",\n      children: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment_form_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleComment,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_field\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            value: comment,\n            onChange: e => {\n              setComment(e.target.value);\n            },\n            placeholder: \"Enter Comment .....\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment_btn_wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"comments_heading\",\n      children: \"Comments : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments_wrapper\",\n      children: (comments === null || comments === void 0 ? void 0 : comments.filter(comment => comment.postId === (post === null || post === void 0 ? void 0 : post._id)).length) !== 0 ? comments === null || comments === void 0 ? void 0 : comments.filter(comment => comment.postId === (post === null || post === void 0 ? void 0 : post._id)).reverse().map(comment => {\n        return /*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment,\n          post: post\n        }, comment._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 24\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"no_comment_txt\",\n        children: \"Being first to post Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"jstu+1I1MXiCa8bEKZoyD1QShLc=\", false, function () {\n  return [useActiveUserContext, useCommentsContext];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","Comment","axios","useActiveUserContext","useCommentsContext","jsxDEV","_jsxDEV","Comments","post","_s","activeUser","comment","setComment","comments","dispatchComments","handleComment","e","preventDefault","res","_id","postId","status","type","payload","data","console","log","error","message","useEffect","localStorage","getItem","fetchCurrentPost","get","id","_users","setCurrentPost","setLikeCount","likes","length","users","map","user","authorId","setPostAuthor","fetchActiveUser","Cookies","token","dispatchActiceUser","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","required","filter","reverse","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/EstiloApp/Estilo-app-/client/src/Components/Comments/Comments.jsx"],"sourcesContent":["import React, { useState} from \"react\";\r\nimport \"./Comments.css\";\r\nimport Comment from \"../Comment/Comment\";\r\nimport axios from \"axios\";\r\nimport { useActiveUserContext } from \"../../hooks/useActiveUserContext\";\r\nimport { useCommentsContext } from \"../../hooks/useCommentsContext\";\r\n\r\nconst Comments = ({ post }) => {\r\n  const { activeUser } = useActiveUserContext();\r\n\r\n  const [comment, setComment] = useState();\r\n  const { comments, dispatchComments } = useCommentsContext();\r\n\r\n\r\n  const handleComment = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const res = await axios.post(`/api/comments/comment/${activeUser?._id}`, {\r\n        postId: post._id,\r\n        comment: comment,\r\n      });\r\n\r\n      if (res.status === 200) {\r\n        dispatchComments({ type: \"ADD_COMMENT\", payload: res.data.comment });\r\n        setComment(\"\");\r\n      } else {\r\n        console.log(\"Comment not posted\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    localStorage.getItem(\"activeUser\")\r\n    const fetchCurrentPost = async () => {\r\n      try {\r\n\r\n        const res = await axios.get(`/api/posts/post/${id}`);\r\n\r\n        if (res.status === 200) {\r\n          setCurrentPost(res.data.post);\r\n          setLikeCount(res.data.post.likes.length);\r\n\r\n          users?.map((user) => {\r\n            if (user?._id === res.data.post.authorId) {\r\n              setPostAuthor(user);\r\n            }\r\n          });\r\n        } else {\r\n          console.log(\"Post not found\");\r\n        }\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    };\r\n   \r\n      const fetchActiveUser = async () =>{\r\n        try{\r\n\r\n          if(Cookies.get(\"jwt\")){\r\n              const res = await axios.post(\"/api/auth/active-user\", {token : Cookies.get(\"jwt\")} );\r\n\r\n              if(res.status === 200){\r\n                dispatchActiceUser({type : \"GET_ACTIVE_USER\", payload : res.data.user});\r\n              }\r\n              \r\n            }\r\n          }\r\n          catch(error){\r\n            console.log(error.message);\r\n          }\r\n      }\r\n\r\n\r\n    fetchCurrentPost();\r\n    fetchActiveUser()\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"comments_section\">\r\n      <h5 className=\"add_comment_txt\">Add Comment</h5>\r\n\r\n      <div className=\"comment_form_wrapper\">\r\n        <form onSubmit={handleComment}>\r\n          <div className=\"input_field\">\r\n            <textarea\r\n              type=\"text\"\r\n              value={comment}\r\n              onChange={(e) => {\r\n                setComment(e.target.value);\r\n              }}\r\n              placeholder=\"Enter Comment .....\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"comment_btn_wrapper\">\r\n            <button type=\"submit\">Comment</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <h2 className=\"comments_heading\">Comments : </h2>\r\n\r\n      <div className=\"comments_wrapper\">\r\n        {\r\n          comments?.filter((comment) => comment.postId === post?._id).length !==\r\n          0 ? (\r\n            comments\r\n              ?.filter((comment) => comment.postId === post?._id)\r\n              .reverse()\r\n              .map((comment) => {\r\n                return <Comment comment={comment} post={post} key={comment._id} />;\r\n              })\r\n          ) : (\r\n            <h4 className=\"no_comment_txt\">Being first to post Comment</h4>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}