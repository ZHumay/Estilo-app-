{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\EstiloApp\\\\Estilo-app-\\\\client\\\\src\\\\context\\\\CommentContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useReducer, useContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CommentsContext = /*#__PURE__*/createContext();\nexport const commentsReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_COMMENTS\":\n      return {\n        comments: action.payload\n      };\n    case \"ADD_COMMENT\":\n      return {\n        comments: [...state.comments, action.payload]\n      };\n    case \"DELETE_COMMENT\":\n      return {\n        comments: state.comments.filter(comment => comment._id !== action.payload._id)\n      };\n    default:\n      return state;\n  }\n};\nexport const useCommentsContext = () => {\n  _s();\n  return useContext(CommentsContext);\n};\n_s(useCommentsContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CommentsContextProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatchComments] = useReducer(commentsReducer, {\n    comments: [] // Initialize comments as an empty array\n  });\n\n  // Load comments from an external source (API, local storage, etc.) on initial render\n  useEffect(() => {\n    // Replace this with your API call to fetch comments or load from local storage\n    const fetchComments = async () => {\n      try {\n        var _comment;\n        const res = await axios.get(`/api/auth/user/${(_comment = comment) === null || _comment === void 0 ? void 0 : _comment.authorId}`);\n        if (res.status === 200) {\n          setUser(res.data.user);\n        }\n        const commentsData = [];\n        dispatchComments({\n          type: \"SET_COMMENTS\",\n          payload: commentsData\n        });\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchComments();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CommentsContext.Provider, {\n    value: {\n      ...state,\n      dispatchComments\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s2(CommentsContextProvider, \"QmNAcrGpuISPGqhhQPQLoPmikdI=\");\n_c = CommentsContextProvider;\nvar _c;\n$RefreshReg$(_c, \"CommentsContextProvider\");","map":{"version":3,"names":["createContext","useReducer","useContext","useEffect","jsxDEV","_jsxDEV","CommentsContext","commentsReducer","state","action","type","comments","payload","filter","comment","_id","useCommentsContext","_s","CommentsContextProvider","children","_s2","dispatchComments","fetchComments","_comment","res","axios","get","authorId","status","setUser","data","user","commentsData","error","console","log","message","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/EstiloApp/Estilo-app-/client/src/context/CommentContext.js"],"sourcesContent":["import { createContext, useReducer, useContext, useEffect } from \"react\";\r\n\r\nexport const CommentsContext = createContext();\r\n\r\nexport const commentsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_COMMENTS\":\r\n      return {\r\n        comments: action.payload,\r\n      };\r\n    case \"ADD_COMMENT\":\r\n      return {\r\n        comments: [...state.comments, action.payload],\r\n      };\r\n    case \"DELETE_COMMENT\":\r\n      return {\r\n        comments: state.comments.filter(\r\n          (comment) => comment._id !== action.payload._id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useCommentsContext = () => useContext(CommentsContext);\r\n\r\nexport const CommentsContextProvider = ({ children }) => {\r\n  const [state, dispatchComments] = useReducer(commentsReducer, {\r\n    comments: [], // Initialize comments as an empty array\r\n  });\r\n\r\n  // Load comments from an external source (API, local storage, etc.) on initial render\r\n  useEffect(() => {\r\n    // Replace this with your API call to fetch comments or load from local storage\r\n    const fetchComments = async () => {\r\n      try {\r\n        const res = await axios.get(`/api/auth/user/${comment?.authorId}`);\r\n\r\n        if(res.status === 200){\r\n          setUser(res.data.user);\r\n        }\r\n  \r\n      \r\n        const commentsData = [];\r\n        dispatchComments({ type: \"SET_COMMENTS\", payload: commentsData });\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    };\r\n\r\n    fetchComments();\r\n  }, []);\r\n\r\n  return (\r\n    <CommentsContext.Provider value={{ ...state, dispatchComments }}>\r\n      {children}\r\n    </CommentsContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,OAAO,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAE9C,OAAO,MAAMO,eAAe,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAChD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,cAAc;MACjB,OAAO;QACLC,QAAQ,EAAEF,MAAM,CAACG;MACnB,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QACLD,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAQ,EAAEF,MAAM,CAACG,OAAO;MAC9C,CAAC;IACH,KAAK,gBAAgB;MACnB,OAAO;QACLD,QAAQ,EAAEH,KAAK,CAACG,QAAQ,CAACE,MAAM,CAC5BC,OAAO,IAAKA,OAAO,CAACC,GAAG,KAAKN,MAAM,CAACG,OAAO,CAACG,GAC9C;MACF,CAAC;IACH;MACE,OAAOP,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMQ,kBAAkB,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMf,UAAU,CAACI,eAAe,CAAC;AAAA;AAACW,EAAA,CAAvDD,kBAAkB;AAE/B,OAAO,MAAME,uBAAuB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACvD,MAAM,CAACZ,KAAK,EAAEa,gBAAgB,CAAC,GAAGpB,UAAU,CAACM,eAAe,EAAE;IAC5DI,QAAQ,EAAE,EAAE,CAAE;EAChB,CAAC,CAAC;;EAEF;EACAR,SAAS,CAAC,MAAM;IACd;IACA,MAAMmB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QAAA,IAAAC,QAAA;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAE,kBAAe,CAAAH,QAAA,GAAET,OAAO,cAAAS,QAAA,uBAAPA,QAAA,CAASI,QAAS,EAAC,CAAC;QAElE,IAAGH,GAAG,CAACI,MAAM,KAAK,GAAG,EAAC;UACpBC,OAAO,CAACL,GAAG,CAACM,IAAI,CAACC,IAAI,CAAC;QACxB;QAGA,MAAMC,YAAY,GAAG,EAAE;QACvBX,gBAAgB,CAAC;UAAEX,IAAI,EAAE,cAAc;UAAEE,OAAO,EAAEoB;QAAa,CAAC,CAAC;MACnE,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;MAC5B;IACF,CAAC;IAEDd,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA,CAACC,eAAe,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAAE,GAAG9B,KAAK;MAAEa;IAAiB,CAAE;IAAAF,QAAA,EAC7DA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACtB,GAAA,CAhCWF,uBAAuB;AAAAyB,EAAA,GAAvBzB,uBAAuB;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}