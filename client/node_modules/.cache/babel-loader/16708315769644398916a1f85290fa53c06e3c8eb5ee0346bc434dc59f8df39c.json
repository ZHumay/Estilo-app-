{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\EstiloApp\\\\Estilo-app-\\\\client\\\\src\\\\Components\\\\Order\\\\Order.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport \"./order.css\";\nimport Modal from \"@mui/material/Modal\";\nimport Box from \"@mui/material/Box\";\nimport { Button, Paper, CircularProgress } from \"@mui/material\";\nimport \"./order.css\";\nimport { useNavigate } from \"react-router\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { BasketContext } from \"../../context/BasketContext\";\nimport { useActiveUserContext } from \"../../context/activeUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  borderRadius: 3\n};\nconst Order = () => {\n  _s();\n  var _formik$errors;\n  const {\n    addToBasket,\n    removeFromBasket,\n    basketItems,\n    total\n  } = useContext(BasketContext);\n  const {\n    orders,\n    addOrder\n  } = useContext(OrderContext);\n  const {\n    activeUser\n  } = useActiveUserContext();\n  const [addAddres, setaddAddres] = useState(\"\");\n  let navigate = useNavigate();\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n    if (!activeUser) {\n      navigate(\"/\");\n    }\n  };\n  const handleClose = () => setOpen(false);\n  const addProductValidationSchema = Yup.object().shape({\n    address: Yup.string().required(\"Must be filled!\")\n  });\n  let user = {\n    activeUser\n  };\n  const formik = useFormik({\n    initialValues: {\n      address: \"\",\n      total: total(),\n      count: basketItems.length,\n      user: user\n    },\n    validationSchema: addProductValidationSchema,\n    onSubmit: values => {\n      handleClose();\n      addOrder(values);\n      console.log(values);\n    }\n  });\n  const addSave = () => {\n    handleClose();\n    let order = {\n      total: total(),\n      count: basketItems.length,\n      addres: addAddres\n    };\n    addOrder(order);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order\",\n      onClick: handleOpen,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: activeUser ? open : \"\",\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Please enter your current address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: formik.handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                alignItems: \"end\",\n                flexWrap: \"wrap\",\n                padding: \"20px 0\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"address\",\n                style: {\n                  minWidth: \"150px\",\n                  display: \"inline-block\"\n                },\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"address\",\n                name: \"address\",\n                type: \"text\",\n                onChange: formik.handleChange,\n                value: formik.values.address,\n                style: {\n                  border: \"none\",\n                  width: 230,\n                  padding: 10,\n                  backgroundColor: \"transparent\",\n                  borderBottom: \"1px solid gray\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: (_formik$errors = formik.errors) === null || _formik$errors === void 0 ? void 0 : _formik$errors.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Submit\",\n              style: {\n                padding: \"10px 50px\",\n                border: \"none\",\n                color: \"white\",\n                backgroundColor: \"green\",\n                borderRadius: 5,\n                margin: \"20px auto\",\n                display: \"block\",\n                cursor: \"pointer\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Order, \"cBob8wO/mhYteBSKgfXRxADDnTs=\", false, function () {\n  return [useActiveUserContext, useNavigate, useFormik];\n});\n_c = Order;\nexport default Order;\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["React","useContext","useState","Modal","Box","Button","Paper","CircularProgress","useNavigate","useFormik","Yup","BasketContext","useActiveUserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","style","position","top","left","transform","width","bgcolor","boxShadow","p","borderRadius","Order","_s","_formik$errors","addToBasket","removeFromBasket","basketItems","total","orders","addOrder","OrderContext","activeUser","addAddres","setaddAddres","navigate","open","setOpen","handleOpen","handleClose","addProductValidationSchema","object","shape","address","string","required","user","formik","initialValues","count","length","validationSchema","onSubmit","values","console","log","addSave","order","addres","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","sx","handleSubmit","display","alignItems","flexWrap","padding","htmlFor","minWidth","id","name","type","onChange","handleChange","value","border","backgroundColor","borderBottom","color","errors","margin","cursor","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/EstiloApp/Estilo-app-/client/src/Components/Order/Order.jsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport \"./order.css\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Button, Paper, CircularProgress } from \"@mui/material\";\r\nimport \"./order.css\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { BasketContext } from \"../../context/BasketContext\";\r\nimport { useActiveUserContext } from \"../../context/activeUserContext\";\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n  borderRadius: 3,\r\n};\r\nconst Order = () => {\r\n  const { addToBasket, removeFromBasket, basketItems, total } =\r\n    useContext(BasketContext);\r\n  const { orders, addOrder } = useContext(OrderContext);\r\n  const { activeUser } = useActiveUserContext();\r\n  const [addAddres, setaddAddres] = useState(\"\");\r\n  let navigate = useNavigate();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    if (!activeUser) {\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const addProductValidationSchema = Yup.object().shape({\r\n    address: Yup.string().required(\"Must be filled!\"),\r\n  });\r\n  let user = { activeUser };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      address: \"\",\r\n      total: total(),\r\n      count: basketItems.length,\r\n      user: user,\r\n    },\r\n    validationSchema: addProductValidationSchema,\r\n    onSubmit: (values) => {\r\n      handleClose();\r\n      addOrder(values);\r\n      console.log(values);\r\n    },\r\n  });\r\n\r\n  const addSave = () => {\r\n    handleClose();\r\n    let order = {\r\n      total: total(),\r\n      count: basketItems.length,\r\n      addres: addAddres,\r\n    };\r\n    addOrder(order);\r\n  };\r\n  return (\r\n    <div className=\"order-box\">\r\n      <div className=\"order\" onClick={handleOpen}>\r\n        Order\r\n      </div>\r\n      <Modal\r\n        open={activeUser ? open : \"\"}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <h3>Please enter your current address</h3>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"end\",\r\n                  flexWrap: \"wrap\",\r\n                  padding: \"20px 0\",\r\n                }}\r\n              >\r\n                <label\r\n                  htmlFor=\"address\"\r\n                  style={{ minWidth: \"150px\", display: \"inline-block\" }}\r\n                >\r\n                  Address\r\n                </label>\r\n                <input\r\n                  id=\"address\"\r\n                  name=\"address\"\r\n                  type=\"text\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.address}\r\n                  style={{\r\n                    border: \"none\",\r\n                    width: 230,\r\n                    padding: 10,\r\n                    backgroundColor: \"transparent\",\r\n                    borderBottom: \"1px solid gray\",\r\n                  }}\r\n                />\r\n                <p style={{ color: \"red\" }}>{formik.errors?.address}</p>\r\n              </div>\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Submit\"\r\n                style={{\r\n                  padding: \"10px 50px\",\r\n                  border: \"none\",\r\n                  color: \"white\",\r\n                  backgroundColor: \"green\",\r\n                  borderRadius: 5,\r\n                  margin: \"20px auto\",\r\n                  display: \"block\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              />\r\n            </>\r\n          </form>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}